# https://github.com/marketplace/actions/setup-kustomize
name: docker-image
# trigger
on:
  push:
    branches: ["stage"]

env:
  REGISTRY: antgonto
  IMAGE_NAME: kubelabs_publicapi
  OPS_BRANCH: master
  OPS_REPO: antgonto/ops

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      RELEASE_VERSION: ${{ steps.tagVersion.outputs.RELEASE_VERSION}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
# Test
 # curl  --header 'Authorization: Bearer 1716711cc0599554313c0674b89df57e5e6fa789' https://sonarcloud.io/api/qualitygates/project_status\?projectKey\=antgonto_dev | jq -r '.projectStatus.status'
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # Poner Bearear de Sonar en secret
      - name: Check Scan
        run: |
          echo "SONAR_STATUS=$(curl  --header 'Authorization: Bearer ${{ secrets.SONAR_TOKEN }}' https://sonarcloud.io/api/qualitygates/project_status\?projectKey\=${{ secrets.PROJECT_KEY }} | jq -r '.projectStatus.status')" >> $GITHUB_ENV

      - name: Sonar Status
        run: echo ${{ env.SONAR_STATUS }}

      - name: Circuit Breaker
        if: ${{ env.SONAR_STATUS == 'ERROR' }}
        run: exit 1

        # Hacer tag por version
#      - name: Get TAG Version
#        run: echo "RELEASE_VERSION=$(git tag --sort=-creatordate | head -1)" >> $GITHUB_ENV

#      Hacer tag por version
      - name: Get COMMIT Version
        run: echo "RELEASE_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Show new tag
        id: tagVersion
        run: |
          echo ${{ env.RELEASE_VERSION }}
          echo "::set-output name=RELEASE_VERSION::${{ env.RELEASE_VERSION }}"

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          # Comment for commit
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          build-args: |
            APP_ENV=${{ secrets.APP_ENV }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      VERSION: ${{ needs.build.outputs.RELEASE_VERSION }}

    steps:
      - name: Checkout OPS code
        uses: actions/checkout@v3
        with:
          repository: ${{ env.OPS_REPO }}
          ssh-key: ${{ secrets.OPS_TOKEN }}
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: "3.6.1"
      - name: Update Kubernetes resource
        run: |
          echo "$(pwd)"
          echo "$(ls)"
          cd lab07/public-api/overlays/stage
          kustomize edit set image KUSTOMIZE-DEFINED=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          
#          # Opcional
#          kustomize build lab07/public-api/overlays/stage > app.yaml
#          cat app.yaml
      - name: Commit files
        run: | 
          git config --local user.email "bot@deploybot.dev"
          git config --local user.name "Automation"
          git add .
          git diff-index --quiet HEAD || git commit -am "New image version. Branch staging. Tag: ${{ env.VERSION }}"
          git push origin ${{ env.OPS_BRANCH }} --force

#      - name: test
#        run: docker run --rm --name api -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
